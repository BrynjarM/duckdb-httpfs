name: Integration Tests
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  linux-tests-httpfs:
    name: Run tests on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '<submodule_version>' ]
        arch: ['linux_amd64']
        vcpkg_version: [ '2023.04.15' ]
        include:
          - arch: 'linux_amd64'
            vcpkg_triplet: 'x64-linux'

    env:
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      S3_TEST_SERVER_AVAILABLE: 1
      AWS_DEFAULT_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: minio_duckdb_user
      AWS_SECRET_ACCESS_KEY: minio_duckdb_user_password
      DUCKDB_S3_ENDPOINT: duckdb-minio.com:9000
      DUCKDB_S3_USE_SSL: false
      HTTP_PROXY_PUBLIC: localhost:3128
      TEST_PERSISTENT_SECRETS_AVAILABLE: true
      PYTHON_HTTP_SERVER_URL: http://localhost:8008
      PYTHON_HTTP_SERVER_DIR: /tmp/python_test_server
      GEN: ninja

    steps:
    - name: Install required ubuntu packages
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq build-essential cmake ninja-build ccache python3 libcurl4-openssl-dev

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Checkout DuckDB to version
      if: ${{ matrix.duckdb_version != '<submodule_version>'}}
      run: |
        cd duckdb
        git checkout ${{ matrix.duckdb_version }}

    - name: Fix permissions of test secrets
      shell: bash
      run: chmod -R 700 data/secrets

    # TODO: fix the authenticated proxy here
    - name: Install and run http proxy squid
      shell: bash
      run: |
        sudo apt-get install squid
        ./scripts/run_squid.sh --port 3128 --log_dir squid_logs &

    - name: Run & Populate Python test server
      shell: bash
      run: |
        mkdir -p $PYTHON_HTTP_SERVER_DIR
        cd $PYTHON_HTTP_SERVER_DIR
        python3 -m http.server 8008 &

    - name: Build
      shell: bash
      run: make reldebug

    - name: Start test server & run tests
      shell: bash
      run: |
        sudo ./scripts/install_s3_test_server.sh
        ./scripts/generate_presigned_url.sh
        source ./scripts/run_s3_test_server.sh
        source ./scripts/set_s3_test_server_variables.sh
        sleep 60

        ./build/reldebug/test/unittest '*'
